
## iDM_yes_hadrons_no_scalar.ipynb ----> THIS IS NOT ANYMORE WITH THE EPSILON**2, BUT WITH THE d_V^f AND THE OTHER RELVANT PARAMETHERS. IN ALL THE FILES IN THIS FOLDER

## iDM_yes_hadrons_no_scalar_modified.ipynb ---->  INSTEAD THIS DIFFERENT FROM THE NON MODIFIED ONE BECAUSE I HAVE NOTICE THAT THE BOLTZMANN EQUATION IS INCORRECT WRITTEN DOWN IN THAT WAY. THE DECAY THERMAL AVERAGE CROSS SECTION HAS JUST (1/H) INSTEAD OF (S/H) AST THE OTHERS, AND MOREOVER THAT DEPENDS ON THE TEMPERATURE, SO I HAVE CHANGED IT. MOREOVER THERE IS ALSO TO MODIFY THE SCATTERING PART. IS THE Y_f^(0) THE EQUILIBRIUM DISTRIBUTION OF THE EELCTRON? IF SO I NEED TO MODIFY IT!!!!!!

## iDM_yes_hadrons_no_scalar_modified_electron_equilibrium.ipynb -----> Should be the correct one finally with also the equilibrium function of the electron. BUT THE RESULT IS TOO BAD.


BUT

## IN OUR MODEL PROBABLY THERE IS A FACTOR MORE... WHEN EXPANDING THE INTERACTION TERMS THERE IA A PREFACTOR OF COS (BETA), COS (W) AND TAN (CHI).... REMEBER TO SQUARE THEM
## THOSE SHOUD BE ADDED IN THE INTERACTION TERM? 
IF d_V^f is without them is something prop to 10E-7
IF d_V^f is with them is something prop to 10E-13!!!

In this latter case the value is too low to be possible. 
epsilon^2=1E-6 and gives me the same result as Gordan.. look at the previous folder to iDM- integratuion...unpolarized.ipytm (Always with the decay and scattering issue enyway (1/H and Y_f^(0) respectively)...)







(* ******************************** *)
(* ****      NP Lagrangian     **** *)
(* ******************************** *)


 LNP0  := Block[{mu,nu},
                ExpandIndices[

           - 1/4 FS[X0,mu,nu] FS[X0,mu,nu] + 1/2 mX0^2 X0[mu] X0[mu]
           + I/2 X1bar.Ga[mu].del[X1,mu]   -     mX1/2 X1bar.X1
           + I/2 X2bar.Ga[mu].del[X2,mu]   -     mX2/2 X2bar.X2
           + I/2 DNbar.Ga[mu].del[DN,mu]   -     mDN/2 DNbar.DN           (*  DN have a covariant derivative, need to change something? *)
           + I/2 HNL4bar.Ga[mu].del[HNL4,mu]   -     mHNL4/2 HNL4bar.HNL4         (*  HNL have a simple derivative  *)
           + I/2 HNL5bar.Ga[mu].del[HNL5,mu]   -     mHNL5/2 HNL5bar.HNL5         (*  HNL have a simple derivative  *)
           + I/2 HNL6bar.Ga[mu].del[HNL6,mu]   -     mHNL6/2 HNL6bar.HNL6         (*  HNL have a simple derivative  *)
           + 1/2 del[S0,mu]   del[S0,mu]   - 1/2 mS0^2 S0^2

           + (mS0^2/vevscal^2) (S0^2)^2 + lambdaphih S0^2 H^2

                              ]
                ];


 LNP1  := Block[{mu,sp1,sp2,sp3},
                ExpandIndices[
      
           - e0 epsilondark ebar[sp1] Ga[mu,sp1,sp2] e[sp2] X0[mu]
           - e0 epsilondark mubar[sp1] Ga[mu,sp1,sp2] mu[sp2] X0[mu]

           + I gX QX X2bar.Ga[mu].X1  ( (cbeta/cchi) X0[mu] + ((Sqrt[1-cbeta^2])/cchi) Z[mu] )   
           (* iDM vector interaction, I have added the Z mediated interaction as well *)

           + Ychi (S0 cos(thetascalar) - H sin(thetascalar)) ( X2bar[sp1] X2[sp1] + X1bar[sp1] X1[sp1])    (* iDM scalar interaction *)





           - ( HNL4bar[sp1] Ga[mu,sp1,sp2] (c_44 Z[mu]+ d_44 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL4[sp3] ) + 
           ( HNL4bar[sp1] Ga[mu,sp1,sp2] (c_45 Z[mu]+ d_45 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL5[sp3] ) + 
           ( HNL4bar[sp1] Ga[mu,sp1,sp2] (c_46 Z[mu]+ d_46 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL6[sp3] ) + 
           ( HNL5bar[sp1] Ga[mu,sp1,sp2] (c_54 Z[mu]+ d_54 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL4[sp3] ) + 
           ( HNL5bar[sp1] Ga[mu,sp1,sp2] (c_55 Z[mu]+ d_55 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL5[sp3] ) + 
           ( HNL5bar[sp1] Ga[mu,sp1,sp2] (c_56 Z[mu]+ d_56 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL6[sp3] ) + 
           ( HNL6bar[sp1] Ga[mu,sp1,sp2] (c_64 Z[mu]+ d_64 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL4[sp3] ) + 
           ( HNL6bar[sp1] Ga[mu,sp1,sp2] (c_65 Z[mu]+ d_65 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL5[sp3] ) + 
           ( HNL6bar[sp1] Ga[mu,sp1,sp2] (c_66 Z[mu]+ d_66 X0[mu]) ((1-Ga[5,sp2,sp3])/2) HNL6[sp3] )     
           (* Neutrino vectorial interaction under L-R symmetry *)



            - ( (HNL4bar[sp1] HNL4[sp2] Deltah_44) + (HNL4bar[sp1] HNL5[sp2] Deltah_45) + (HNL4bar[sp1] HNL6[sp2] Deltah_46) 
            + (HNL5bar[sp1] HNL4[sp2] Deltah_54) + (HNL5bar[sp1] HNL5[sp2] Deltah_55) + (HNL5bar[sp1] HNL6[sp2] Deltah_56) 
            + (HNL6bar[sp1] HNL4[sp2] Deltah_64) + (HNL6bar[sp1] HNL5[sp2] Deltah_65) + (HNL6bar[sp1] HNL6[sp2] Deltah_66) 
            + (DNbar[sp1] HNL4[sp2] Deltah_4DN) + (DNbar[sp1] HNL5[sp2] Deltah_5DN) + (DNbar[sp1] HNL6[sp2] Deltah_6DN) ) 
            * (H cos(thetascalar) + S0 sin(thetascalar))       (* NEUTRINO SCALAR VERTICIES higgs *)




            - ( (HNL4bar[sp1] HNL4[sp2] Deltaphi_44 ) + (HNL4bar[sp1] HNL5[sp2] Deltaphi_45 ) + (HNL4bar[sp1] HNL6[sp2] Deltaphi_46 ) 
            + (HNL5bar[sp1] HNL4[sp2] Deltaphi_54 ) + (HNL5bar[sp1] HNL5[sp2] Deltaphi_55 ) + (HNL5bar[sp1] HNL6[sp2] Deltaphi_56 ) 
            + (HNL6bar[sp1] HNL4[sp2] Deltaphi_64 ) + (HNL6bar[sp1] HNL5[sp2] Deltaphi_65 ) + (HNL6bar[sp1] HNL6[sp2] Deltaphi_66 ) 
            + (DNbar[sp1] HNL4[sp2] Deltaphi_DN4 ) + (DNbar[sp1] HNL5[sp2] Deltaphi_DN5 ) + (DNbar[sp1] HNL6[sp2] Deltaphi_DN6 )  ) 
            * (S0 cos(thetascalar) - H sin(thetascalar))          (* NEUTRINO SCALAR VERTICIES dark scalar *)
            
            
            
            
            
            
            
            
            
            
            (*  External parameters *)
            
            

  gX == {                                                                          (*   >>>>>   HERE!   <<<<<   *)                                                                         
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    InteractionOrder -> {QNP,1},
    Description      -> "gX"
  },
  QX == {                                                                         
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "QX"
  },                                                            (* eliminated the schi because is an internal parameter depending on epsilon  *)


  epsilondark == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "epsilon_dark"
  },                                      (*   >>>>>   HERE! Nico (Probably we should go back to Gordan's model)   <<<<<   *)



  vevscal == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "vev_scalar"
  },                                                (*   >>>>>   HERE! Nico   <<<<<   *)
 vevhiggs == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 246,
    Description      -> "vev_higgs"
  },                                                (*   >>>>>   HERE! Nico   <<<<<   *)
 lambdaphih == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "Lambda_phi_h"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)


 U_nu3HNL4 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_nu3HNL4"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_nu3HNL5 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_nu3HNL5"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_nu3HNL6 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_nu3HNL6"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL4HNL4 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL4HNL4"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL4HNL5 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL4HNL5"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL4HNL6 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL4HNL6"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL5HNL4 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL5HNL4"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL5HNL5 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL5HNL5"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL5HNL6 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL5HNL6"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL6HNL4 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL6HNL4"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL6HNL5 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL6HNL5"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_HNL6HNL6 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_HNL6HNL6"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_DNHNL4 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_DNHNL4"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
 U_DNHNL5 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_DNHNL5"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *) 
 U_DNHNL6 == {
    ParameterType    -> External, 
    BlockName        -> NP,
    Value            -> 0.1,
    Description      -> "U_DNHNL6"
  },                                                (*   >>>>>   HERE! Nico  <<<<<   *)
            
            
            
            
            
            
            
            
            
            
             (* Internal Parameters *)


 c44 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL4 U_nu3HNL4 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c44"
  },
 c45 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL4 U_nu3HNL5 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c45"
  },
c46 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL4 U_nu3HNL6 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c46"
  },
 c54 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL5 U_nu3HNL4 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c54"
  },
 c55 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL5 U_nu3HNL5 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c55"
  },
c56 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL5 U_nu3HNL6 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c56"
  },
 c64 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL6 U_nu3HNL4 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c64"
  },
 c65 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL6 U_nu3HNL5 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c65"
  },
c66 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (gw0/2cw0) U_nu3HNL6 U_nu3HNL6 (cbeta + sbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "c66"
  },
(* All possible interaction terms. The alpha is fixed and is 3, that is the bridge to go from every HNL to an other   *)





 d44 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL4 U_nu3HNL4 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d44"
  },
 d45 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL4 U_nu3HNL5 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d45"
  },
 d46 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL4 U_nu3HNL6 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d46"
  },
 d54 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL5 U_nu3HNL4 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d54"
  },
 d55 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL5 U_nu3HNL5 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d55"
  },
 d56 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL5 U_nu3HNL6 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d56"
  },
 d64 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL6 U_nu3HNL4 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d64"
  },
 d65 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL6 U_nu3HNL5 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d65"
  },
 d66 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> -(gw0/2cw0) U_nu3HNL6 U_nu3HNL6 (sbeta + cbeta*sw0*tchi ),   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "d66"
  },
(* All possible interaction terms. The alpha is fixed and is 3, that is the bridge to go from every HNL to an other   *)







  Deltah_44 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_HNL4HNL4 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_44"
  },
  Deltah_45 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_HNL4HNL5 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_45"
  },
  Deltah_46 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_HNL4HNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_46"
  },
  Deltah_54 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL5 *(Sqrt[2]*mnu3/vevscal)* U_HNL5HNL4 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_54"
  },
  Deltah_55 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL5 *(Sqrt[2]*mnu3/vevscal)* U_HNL5HNL5 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_55"
  },
  Deltah_56 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL5 *(Sqrt[2]*mnu3/vevscal)* U_HNL5HNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_56"
  },
  Deltah_64 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL6 *(Sqrt[2]*mnu3/vevscal)* U_HNL6HNL4 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_64"
  },
  Deltah_65 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL6 *(Sqrt[2]*mnu3/vevscal)* U_HNL6HNL5 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_65"
  },
  Deltah_66 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL6 *(Sqrt[2]*mnu3/vevscal)* U_HNL6HNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_66"
  },
  Deltah_4DN == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_DNHNL4 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_4DN"
  },
  Deltah_5DN == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_DNHNL5 ,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_5DN"
  },
  Deltah_6DN == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (1/Sqrt[2])* U_nu3HNL4 *(Sqrt[2]*mnu3/vevscal)* U_DNHNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltah_6DN"
  },


  Deltaphi_44 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL4HNL4 *(Sqrt[2]*mDN/vevscal)* U_DNHNL4,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_44"
  },
  Deltaphi_45 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL4HNL5 *(Sqrt[2]*mDN/vevscal)* U_DNHNL5,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_45"
  },
  Deltaphi_46 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL4HNL6 *(Sqrt[2]*mDN/vevscal)* U_DNHNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_46"
  },
 Deltaphi_54 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL5HNL4 *(Sqrt[2]*mDN/vevscal)* U_DNHNL4,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_54"
  },
  Deltaphi_55 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL5HNL5 *(Sqrt[2]*mDN/vevscal)* U_DNHNL5,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_55"
  },
  Deltaphi_56 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL5HNL6 *(Sqrt[2]*mDN/vevscal)* U_DNHNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_66"
  },
 Deltaphi_64 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL6HNL4 *(Sqrt[2]*mDN/vevscal)* U_DNHNL4,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_44"
  },
  Deltaphi_65 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL6HNL5 *(Sqrt[2]*mDN/vevscal)* U_DNHNL5,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_65"
  },
  Deltaphi_66 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_HNL6HNL6 *(Sqrt[2]*mDN/vevscal)* U_DNHNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_66"
  },
 Deltaphi_DN4 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_DNHNL4 *(Sqrt[2]*mDN/vevscal)* U_DNHNL4,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_DN4"
  },
  Deltaphi_DN5 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_DNHNL5 *(Sqrt[2]*mDN/vevscal)* U_DNHNL5,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_DN5"
  },
  Deltaphi_DN6 == {
    ParameterType    -> Internal, 
    BlockName        -> NP,
    Value            -> (2/Sqrt[2])* U_DNHNL6 *(Sqrt[2]*mDN/vevscal)* U_DNHNL6,   (* There should be an other term, but for L-R symmetry is zero *)
    Description      -> "Deltaphi_DN6"
  },
